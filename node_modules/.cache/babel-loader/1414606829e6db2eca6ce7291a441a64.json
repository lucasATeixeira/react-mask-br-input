{"ast":null,"code":"import _slicedToArray from \"/home/lucas/www/projetos/masks/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/www/projetos/masks/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/www/projetos/masks/test/src/masks/PhoneCurrency.js\";\nimport React, { useState } from \"react\";\nexport default function PhoneCurrency(_ref) {\n  let value = _ref.value,\n      onChange = _ref.onChange,\n      rest = _objectWithoutProperties(_ref, [\"value\", \"onChange\"]);\n\n  const _useState = useState(value.toString()),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  function maskInput(value) {\n    return value.replace(/\\D/g, \"\").replace(/(\\d{2})(\\d)/, \"($1) $2\");\n  }\n\n  function cleanMask(value) {\n    return value.replace(/\\D/g, \"\");\n  }\n\n  function handleChange(e) {\n    const result = maskInput(e.target.value);\n    const cleanResult = cleanMask(result);\n    setInput(result);\n    onChange(cleanResult, result);\n  }\n\n  return React.createElement(\"input\", Object.assign({\n    value: input,\n    onChange: handleChange\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/lucas/www/projetos/masks/test/src/masks/PhoneCurrency.js"],"names":["React","useState","PhoneCurrency","value","onChange","rest","toString","input","setInput","maskInput","replace","cleanMask","handleChange","e","result","target","cleanResult"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,aAAT,OAAqD;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAARC,IAAQ;;AAAA,oBACxCJ,QAAQ,CAACE,KAAK,CAACG,QAAN,EAAD,CADgC;AAAA;AAAA,QAC3DC,KAD2D;AAAA,QACpDC,QADoD;;AAGlE,WAASC,SAAT,CAAmBN,KAAnB,EAA0B;AACxB,WAAOA,KAAK,CAACO,OAAN,CAAc,KAAd,EAAqB,EAArB,EAAyBA,OAAzB,CAAiC,aAAjC,EAAgD,SAAhD,CAAP;AACD;;AAED,WAASC,SAAT,CAAmBR,KAAnB,EAA0B;AACxB,WAAOA,KAAK,CAACO,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAP;AACD;;AAED,WAASE,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAMC,MAAM,GAAGL,SAAS,CAACI,CAAC,CAACE,MAAF,CAASZ,KAAV,CAAxB;AACA,UAAMa,WAAW,GAAGL,SAAS,CAACG,MAAD,CAA7B;AACAN,IAAAA,QAAQ,CAACM,MAAD,CAAR;AACAV,IAAAA,QAAQ,CAACY,WAAD,EAAcF,MAAd,CAAR;AACD;;AAED,SAAO;AAAO,IAAA,KAAK,EAAEP,KAAd;AAAqB,IAAA,QAAQ,EAAEK;AAA/B,KAAiDP,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function PhoneCurrency({ value, onChange, ...rest }) {\n  const [input, setInput] = useState(value.toString());\n\n  function maskInput(value) {\n    return value.replace(/\\D/g, \"\").replace(/(\\d{2})(\\d)/, \"($1) $2\");\n  }\n\n  function cleanMask(value) {\n    return value.replace(/\\D/g, \"\");\n  }\n\n  function handleChange(e) {\n    const result = maskInput(e.target.value);\n    const cleanResult = cleanMask(result);\n    setInput(result);\n    onChange(cleanResult, result);\n  }\n\n  return <input value={input} onChange={handleChange} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module"}