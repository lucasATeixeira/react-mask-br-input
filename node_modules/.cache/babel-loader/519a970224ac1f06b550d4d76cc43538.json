{"ast":null,"code":"import _slicedToArray from \"/home/lucas/www/projetos/masks/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/www/projetos/masks/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/www/projetos/masks/test/src/masks/CurrencyInput.js\";\nimport React, { useState } from \"react\";\nexport default function CurrencyInput(_ref) {\n  let value = _ref.value,\n      onChange = _ref.onChange,\n      rest = _objectWithoutProperties(_ref, [\"value\", \"onChange\"]);\n\n  const _useState = useState(() => {\n    const number = Number(value) / 100;\n    return number.toLocaleString(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1]; // TRANSFORM THE RECEIVED VALUE, STRING OR NUMBER, TO CURRENCY\n\n\n  function maskInput(value) {\n    const number = Number(value.replace(/\\D/g, \"\")) / 100;\n    return number.toLocaleString(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n  }\n\n  function cleanMask(value) {\n    return Number(value.replace(/\\D/g, \"\")) / 100;\n  }\n\n  function handleChange(e) {\n    const result = maskInput(e.target.value);\n    setInput(result);\n    onChange(cleanMask(result), result);\n  }\n\n  return React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    value: input,\n    onChange: handleChange\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/lucas/www/projetos/masks/test/src/masks/CurrencyInput.js"],"names":["React","useState","CurrencyInput","value","onChange","rest","number","Number","toLocaleString","style","currency","input","setInput","maskInput","replace","cleanMask","handleChange","e","result","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,aAAT,OAAqD;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAARC,IAAQ;;AAAA,oBACxCJ,QAAQ,CAAC,MAAM;AACvC,UAAMK,MAAM,GAAGC,MAAM,CAACJ,KAAD,CAAN,GAAgB,GAA/B;AACA,WAAOG,MAAM,CAACE,cAAP,CAAsB,OAAtB,EAA+B;AACpCC,MAAAA,KAAK,EAAE,UAD6B;AAEpCC,MAAAA,QAAQ,EAAE;AAF0B,KAA/B,CAAP;AAID,GANiC,CADgC;AAAA;AAAA,QAC3DC,KAD2D;AAAA,QACpDC,QADoD,kBAO9D;;;AAEJ,WAASC,SAAT,CAAmBV,KAAnB,EAA0B;AACxB,UAAMG,MAAM,GAAGC,MAAM,CAACJ,KAAK,CAACW,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAD,CAAN,GAAmC,GAAlD;AACA,WAAOR,MAAM,CAACE,cAAP,CAAsB,OAAtB,EAA+B;AACpCC,MAAAA,KAAK,EAAE,UAD6B;AAEpCC,MAAAA,QAAQ,EAAE;AAF0B,KAA/B,CAAP;AAID;;AAED,WAASK,SAAT,CAAmBZ,KAAnB,EAA0B;AACxB,WAAOI,MAAM,CAACJ,KAAK,CAACW,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAD,CAAN,GAAmC,GAA1C;AACD;;AAED,WAASE,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAMC,MAAM,GAAGL,SAAS,CAACI,CAAC,CAACE,MAAF,CAAShB,KAAV,CAAxB;AACAS,IAAAA,QAAQ,CAACM,MAAD,CAAR;AACAd,IAAAA,QAAQ,CAACW,SAAS,CAACG,MAAD,CAAV,EAAoBA,MAApB,CAAR;AACD;;AAED,SAAO;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEP,KAA1B;AAAiC,IAAA,QAAQ,EAAEK;AAA3C,KAA6DX,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function CurrencyInput({ value, onChange, ...rest }) {\n  const [input, setInput] = useState(() => {\n    const number = Number(value) / 100;\n    return number.toLocaleString(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n  }); // TRANSFORM THE RECEIVED VALUE, STRING OR NUMBER, TO CURRENCY\n\n  function maskInput(value) {\n    const number = Number(value.replace(/\\D/g, \"\")) / 100;\n    return number.toLocaleString(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n  }\n\n  function cleanMask(value) {\n    return Number(value.replace(/\\D/g, \"\")) / 100;\n  }\n\n  function handleChange(e) {\n    const result = maskInput(e.target.value);\n    setInput(result);\n    onChange(cleanMask(result), result);\n  }\n\n  return <input type=\"text\" value={input} onChange={handleChange} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module"}